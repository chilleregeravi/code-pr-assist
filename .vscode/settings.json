{
    "python.defaultInterpreterPath": "./.venv/bin/python",
    "python.terminal.activateEnvironment": true,
    "[python]": {
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        }
    },
    "black-formatter.args": [
        "--line-length=88"
    ],
    "isort.args": [
        "--profile",
        "black",
        "--line-length",
        "88"
    ],
    "ruff.args": [
        "--config=${workspaceFolder}/pyproject.toml"
    ],
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.testing.pytestArgs": [
        "-v",
        "--tb=short"
    ],
    "python.testing.pytestPath": "pytest",
    "python.testing.autoTestDiscoverOnSaveEnabled": true,
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.autoFormatStrings": true,
    "python.analysis.extraPaths": [
        "github-agent/src",
        "database-agent/src"
    ],
    "files.exclude": {
        "**/__pycache__": true,
        "**/*.pyc": true,
        ".pytest_cache": true,
        ".coverage": true,
        "coverage.xml": true,
        "**/.venv": true,
        "**/venv": true,
        "**/.ruff_cache": true,
        "**/.mypy_cache": true
    },
    "files.watcherExclude": {
        "**/__pycache__/**": true,
        "**/.pytest_cache/**": true,
        "**/.venv/**": true,
        "**/.ruff_cache/**": true,
        "**/.mypy_cache/**": true
    },
    "python.envFile": "${workspaceFolder}/.env",
    "terminal.integrated.env.linux": {
        "PYTHONPATH": "${workspaceFolder}/github-agent/src:${workspaceFolder}/database-agent/src"
    },
    "terminal.integrated.env.osx": {
        "PYTHONPATH": "${workspaceFolder}/github-agent/src:${workspaceFolder}/database-agent/src"
    },
    "terminal.integrated.env.windows": {
        "PYTHONPATH": "${workspaceFolder}/github-agent/src;${workspaceFolder}/database-agent/src"
    },
    "python.linting.enabled": false,
    "python.formatting.provider": "black"
}
