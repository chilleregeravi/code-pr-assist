name: Auto-merge Dependabot PRs

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write
  checks: read
  statuses: read

jobs:
  dependabot:
    runs-on: ubuntu-latest
    # Only run on Dependabot PRs
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2.2.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Auto-approve patch and minor updates
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor' }}
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for all CI checks to complete
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor' }}
        uses: lewagon/wait-on-check-action@v1.3.4
        id: wait-for-checks
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 15
          running-workflow-name: 'Auto-merge Dependabot PRs'
          allowed-conclusions: success
          verbose: true

      - name: Auto-merge patch and minor updates
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor' }}
        run: |
          echo "Auto-merging ${{ steps.metadata.outputs.dependency-names }} from ${{ steps.metadata.outputs.previous-version }} to ${{ steps.metadata.outputs.new-version }}"
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-updates:
    runs-on: ubuntu-latest
    # Only run on Dependabot security PRs
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2.2.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Auto-approve security updates
        if: ${{ contains(steps.metadata.outputs.dependency-names, 'security') || steps.metadata.outputs.alert-state == 'OPEN' }}
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for all CI checks to complete (security)
        if: ${{ contains(steps.metadata.outputs.dependency-names, 'security') || steps.metadata.outputs.alert-state == 'OPEN' }}
        uses: lewagon/wait-on-check-action@v1.3.4
        id: wait-for-checks-security
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 15
          running-workflow-name: 'Auto-merge Dependabot PRs'
          allowed-conclusions: success
          verbose: true

      - name: Auto-merge security updates
        if: ${{ contains(steps.metadata.outputs.dependency-names, 'security') || steps.metadata.outputs.alert-state == 'OPEN' }}
        run: |
          echo "Auto-merging security update for ${{ steps.metadata.outputs.dependency-names }}"
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notification:
    runs-on: ubuntu-latest
    needs: [dependabot, security-updates]
    if: ${{ always() && github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2.2.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Comment on major updates
        if: ${{ steps.metadata.outputs.update-type == 'version-update:semver-major' }}
        run: |
          gh pr comment "$PR_URL" --body "üö® **Major Version Update Detected** üö®

          This PR contains a **major version update** for ${{ steps.metadata.outputs.dependency-names }} from `${{ steps.metadata.outputs.previous-version }}` to `${{ steps.metadata.outputs.new-version }}`.

          **‚ö†Ô∏è Manual review required** - major updates may contain breaking changes.

          Please review the following before merging:
          - [ ] Check the changelog/release notes for breaking changes
          - [ ] Verify all tests pass locally
          - [ ] Consider testing in a staging environment
          - [ ] Update any affected documentation

          This PR will **NOT** be auto-merged and requires manual approval."
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add labels based on update type
        run: |
          if [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-patch" ]]; then
            gh pr edit "$PR_URL" --add-label "auto-merge" --add-label "patch-update"
          elif [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-minor" ]]; then
            gh pr edit "$PR_URL" --add-label "auto-merge" --add-label "minor-update"
          elif [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-major" ]]; then
            gh pr edit "$PR_URL" --add-label "manual-review" --add-label "major-update"
          fi
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
