name: CI

on:
  push:
    branches: [ main ]
    paths:
      - 'database-agent/**'
      - 'github-agent/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'database-agent/**'
      - 'github-agent/**'

jobs:
  setup-database-agent:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'database-agent/requirements.txt'

      - name: Install dependencies
        working-directory: database-agent
        run: |
          make -f ../Makefile.common venv

      - name: Cache dependencies
        uses: actions/cache/save@v4
        with:
          path: database-agent/.venv
          key: ${{ runner.os }}-database-agent-venv-${{ hashFiles('database-agent/requirements.txt') }}

  setup-github-agent:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'github-agent/requirements.txt'

      - name: Install dependencies
        working-directory: github-agent
        run: |
          make -f ../Makefile.common venv

      - name: Cache dependencies
        uses: actions/cache/save@v4
        with:
          path: github-agent/.venv
          key: ${{ runner.os }}-github-agent-venv-${{ hashFiles('github-agent/requirements.txt') }}

  database-agent-checks:
    needs: setup-database-agent
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'database-agent/requirements.txt'

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          path: database-agent/.venv
          key: ${{ runner.os }}-database-agent-venv-${{ hashFiles('database-agent/requirements.txt') }}

      - name: Run linting and formatting checks
        working-directory: database-agent
        run: |
          source .venv/bin/activate
          make -f ../Makefile.common lint-check-all

      - name: Run type checking
        working-directory: database-agent
        run: |
          source .venv/bin/activate
          mypy src

      - name: Run tests with coverage
        working-directory: database-agent
        run: |
          source .venv/bin/activate
          make -f ../Makefile.common test

  github-agent-checks:
    needs: setup-github-agent
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./github-agent

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: './github-agent/requirements.txt'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Check formatting with black
        run: |
          pip install black
          black . --check
      - name: Type check with mypy
        run: |
          pip install mypy
          mypy .
      - name: Test with pytest
        env:
          PYTHONPATH: src
        run: |
          pip install pytest pytest-cov
          pytest --cov=./ --cov-report=xml

  build-database-agent:
    needs: database-agent-checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build database-agent image
        working-directory: database-agent
        run: |
          docker build -t database-agent:test .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push database-agent image to ghcr.io
        working-directory: database-agent
        run: |
          docker tag database-agent:test ghcr.io/chilleregeravi/code-pr-assist/database-agent:latest
          docker push ghcr.io/chilleregeravi/code-pr-assist/database-agent:latest

  build-github-agent:
    needs: github-agent-checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build github-agent image
        working-directory: github-agent
        run: |
          docker build -t github-agent:test .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push github-agent image to ghcr.io
        working-directory: github-agent
        run: |
          docker tag github-agent:test ghcr.io/chilleregeravi/code-pr-assist/github-agent:latest
          docker push ghcr.io/chilleregeravi/code-pr-assist/github-agent:latest 