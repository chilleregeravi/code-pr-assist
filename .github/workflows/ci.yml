name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup-database-agent:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        working-directory: database-agent
        run: |
          make -f ../Makefile.common venv

      - name: Cache dependencies
        uses: actions/cache/save@v4
        with:
          path: database-agent/.venv
          key: ${{ runner.os }}-database-agent-venv-${{ hashFiles('database-agent/requirements.txt') }}

  setup-github-agent:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        working-directory: github-agent
        run: |
          make -f ../Makefile.common venv

      - name: Cache dependencies
        uses: actions/cache/save@v4
        with:
          path: github-agent/.venv
          key: ${{ runner.os }}-github-agent-venv-${{ hashFiles('github-agent/requirements.txt') }}

  database-agent-checks:
    needs: setup-database-agent
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          path: database-agent/.venv
          key: ${{ runner.os }}-database-agent-venv-${{ hashFiles('database-agent/requirements.txt') }}

      - name: Run linting and formatting checks
        working-directory: database-agent
        run: |
          source .venv/bin/activate
          make -f ../Makefile.common lint-check-all

      - name: Run type checking
        working-directory: database-agent
        run: |
          source .venv/bin/activate
          mypy src

      - name: Run tests with coverage
        working-directory: database-agent
        run: |
          source .venv/bin/activate
          make -f ../Makefile.common test

  github-agent-checks:
    needs: setup-github-agent
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Restore dependencies
        uses: actions/cache/restore@v4
        with:
          path: github-agent/.venv
          key: ${{ runner.os }}-github-agent-venv-${{ hashFiles('github-agent/requirements.txt') }}

      - name: Run linting and formatting checks
        working-directory: github-agent
        run: |
          source .venv/bin/activate
          make -f ../Makefile.common lint-check-all

      - name: Run type checking
        working-directory: github-agent
        run: |
          source .venv/bin/activate
          mypy src

      - name: Run tests with coverage
        working-directory: github-agent
        run: |
          source .venv/bin/activate
          make -f ../Makefile.common test

  build-database-agent:
    needs: database-agent-checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and test database-agent image
        working-directory: database-agent
        run: |
          docker build -t database-agent:test .
          docker run --rm database-agent:test python -m pytest

  build-github-agent:
    needs: github-agent-checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and test github-agent image
        working-directory: github-agent
        run: |
          docker build -t github-agent:test .
          docker run --rm github-agent:test python -m pytest 