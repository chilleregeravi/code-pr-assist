[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "github_agent"
version = "0.1.0"
authors = [
    { name = "Ravi Chillerega", email = "chilleregeravi@gmail.com" },
]
description = "A GitHub agent for processing pull requests"
requires-python = ">=3.11"
dependencies = [
    # Agent-specific dependencies
    "fastapi",
    "uvicorn",
    "pydantic",
    "python-dotenv",
    "PyGithub",
    "openai",
    "qdrant-client",
    "opentelemetry-api",
    "opentelemetry-sdk",
    "opentelemetry-exporter-otlp",
]

[project.optional-dependencies]
test = [
    "pytest>=8.0",
    "pytest-cov>=6.0",
    "pytest-asyncio>=0.26",
    "pytest-mock>=3.14",
    "httpx>=0.26",
]

dev = [
    "black>=25.0",
    "isort>=6.0",
    "ruff>=0.11",
    "pre-commit>=4.0",
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["github_agent"]

# Agent-specific test configuration
[tool.pytest.ini_options]
addopts = [
    "-v",
    "--cov=src/github_agent",
    "--cov-report=term-missing",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=80",
]
testpaths = ["src/tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["src/github_agent"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
fail_under = 80
